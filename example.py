#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è AI Summariser
"""

import asyncio
import logging
from ai_summariser import TelegramSummariser

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–º–µ—Ä–∞"""
    
    # –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π)
    db_path = "/Users/apple/Desktop/Tg_Parser/tg_parser.db"
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞
    async with TelegramSummariser(db_path) as summariser:
        
        print("ü§ñ AI Summariser - –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")
        print("=" * 50)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫
        print("\nüìÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞–ø–∫–∏:")
        folders = await summariser.get_folders()
        for folder in folders:
            print(f"  - {folder.id}: {folder.name}")
        
        if not folders:
            print("  –ü–∞–ø–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        # –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—É—é –ø–∞–ø–∫—É –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
        folder_id = folders[0].id
        folder_name = folders[0].name
        
        print(f"\nüìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞–ø–∫—É: {folder_name} (ID: {folder_id})")
        
        # –°–æ–∑–¥–∞–µ–º —Å–≤–æ–¥–∫—É –ø–æ –ø–∞–ø–∫–µ
        print("\nüîÑ –°–æ–∑–¥–∞–µ–º —Å–≤–æ–¥–∫—É...")
        summary = await summariser.summarise_folder(
            folder_id=folder_id,
            limit=30,  # –ú–∞–∫—Å–∏–º—É–º 30 –ø–æ—Å—Ç–æ–≤
            days_back=7,  # –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
            include_ai_summary=True
        )
        
        if summary:
            print(f"\n‚úÖ –°–≤–æ–¥–∫–∞ —Å–æ–∑–¥–∞–Ω–∞!")
            print(f"üìà –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {summary.total_posts}")
            print(f"üìÖ –ü–µ—Ä–∏–æ–¥: {summary.date_range}")
            
            if summary.main_topics:
                print(f"üéØ –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º—ã:")
                for i, topic in enumerate(summary.main_topics, 1):
                    print(f"  {i}. {topic}")
            
            print(f"\nüìù –û–±—â–∞—è —Å–≤–æ–¥–∫–∞:")
            print(summary.overall_summary)
            
            if summary.posts:
                print(f"\nüì∞ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã:")
                for i, post in enumerate(summary.posts[:5], 1):
                    print(f"  {i}. [{post.date.strftime('%d.%m %H:%M')}] {post.channel_title}")
                    print(f"     {post.summary[:100]}...")
                    if post.link:
                        print(f"     üîó {post.link}")
                    print()
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–≤–æ–¥–∫–∏")
        
        # –ü—Ä–∏–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞ –∫ –ò–ò
        print("\nü§î –ó–∞–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å –ò–ò...")
        question = "–ö–∞–∫–∏–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ–±—Å—É–∂–¥–∞–ª–∏—Å—å –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ—Å—Ç–∞—Ö?"
        
        ai_response = await summariser.ask_about_posts(
            folder_id=folder_id,
            question=question,
            limit=20,
            days_back=7
        )
        
        if ai_response:
            print(f"\n‚ùì –í–æ–ø—Ä–æ—Å: {ai_response.question}")
            print(f"ü§ñ –û—Ç–≤–µ—Ç: {ai_response.answer}")
            print(f"üìä –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {ai_response.confidence:.2f}")
            
            if ai_response.related_posts:
                print(f"üîó –°–≤—è–∑–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã: {len(ai_response.related_posts)}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò")
        
        # –ü—Ä–∏–º–µ—Ä –ø–æ–∏—Å–∫–∞
        print("\nüîç –ü—Ä–∏–º–µ—Ä –ø–æ–∏—Å–∫–∞...")
        search_term = "–Ω–æ–≤–æ—Å—Ç–∏"
        
        search_summary = await summariser.search_and_summarise(
            folder_id=folder_id,
            search_term=search_term,
            limit=20
        )
        
        if search_summary:
            print(f"\n‚úÖ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω!")
            print(f"üîç –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: '{search_term}'")
            print(f"üìà –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {search_summary.total_posts}")
            print(f"üìù –°–≤–æ–¥–∫–∞ –ø–æ –ø–æ–∏—Å–∫—É:")
            print(search_summary.overall_summary)
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ")

if __name__ == "__main__":
    asyncio.run(main()) 